<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="02748dc8-acbf-4fd0-a2b4-e96abe6bc621" name="Default Changelist" comment="Adding changelog config" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/Cellar/go/1.16.4/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="ab60a60da530733e709138b7962da4c762038d51" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1oEWzCImHQjYstqAqpDDaqdmtk0" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="codeWithMe.voiceChat.enabledByDefault" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="go" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/internal" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.general" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal" />
      <recent name="$PROJECT_DIR$/benchmark/nats-benchmark/frisbee" />
      <recent name="$PROJECT_DIR$/internal/server" />
      <recent name="$PROJECT_DIR$/benchmark" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal" />
      <recent name="$PROJECT_DIR$/pkg/errors" />
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$/internal/ringbuffer" />
      <recent name="$PROJECT_DIR$/internal/ringbuffer/packet" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestReadClose in github.com/loophole-labs/frisbee">
    <configuration name="BenchmarkClientThroughputResponse in github.com/loophole-labs/frisbee" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="frisbee" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/loophole-labs/frisbee" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkClientThroughputResponse\E$" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkThroughputWithResponse in github.com/loophole-labs/frisbee" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="frisbee" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/loophole-labs/frisbee" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkThroughputWithResponse\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReadClose in github.com/loophole-labs/frisbee" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="frisbee" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/loophole-labs/frisbee" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReadClose\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWriteClose in github.com/loophole-labs/frisbee" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="frisbee" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="GOMAXPROCS" value="2" />
      </envs>
      <kind value="PACKAGE" />
      <package value="github.com/loophole-labs/frisbee" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWriteClose\E$" />
      <method v="2" />
    </configuration>
    <configuration name="gobench client_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="frisbee" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/loophole-labs/frisbee" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/client_test.go" />
      <framework value="gobench" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestReadClose in github.com/loophole-labs/frisbee" />
        <item itemvalue="Go Test.TestWriteClose in github.com/loophole-labs/frisbee" />
        <item itemvalue="Go Test.BenchmarkThroughputWithResponse in github.com/loophole-labs/frisbee" />
        <item itemvalue="Go Test.BenchmarkClientThroughputResponse in github.com/loophole-labs/frisbee" />
        <item itemvalue="Go Test.gobench client_test.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="LOOP-74" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="origin/conn-remove-mutex" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="master" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Updating examples" />
    <MESSAGE value="Updating constants" />
    <MESSAGE value="Updating test case with require" />
    <MESSAGE value="Testing heartbeat options" />
    <MESSAGE value="Inlining readAtleast" />
    <MESSAGE value="Removing useless err" />
    <MESSAGE value="Adding atomic errors and atomic closed checkers" />
    <MESSAGE value="Adding race checks to semaphore" />
    <MESSAGE value="Semaphore edit" />
    <MESSAGE value="Testing new heartbeat options, reconfiguring error handling and crashes in frisbee connections" />
    <MESSAGE value="Adding some more methods for frisbee connections" />
    <MESSAGE value="Adding open method for ring buffer (which will allow us to reopen the buffer in the event of a reconnect)" />
    <MESSAGE value="Pushing as a test" />
    <MESSAGE value="functional heartbeat" />
    <MESSAGE value="Adding kill lock to close flusher" />
    <MESSAGE value="Fixing test cases" />
    <MESSAGE value="Adding state checking to WriteBufferSize" />
    <MESSAGE value="Increasing test stability" />
    <MESSAGE value="Removing examples and benchmarks (they are now in their own repos)" />
    <MESSAGE value="Adding godoc stuff" />
    <MESSAGE value="Fixing nits" />
    <MESSAGE value="Completed godoc" />
    <MESSAGE value="Removing gobwas/pool since it was causing race condition errors" />
    <MESSAGE value="Adding licenses" />
    <MESSAGE value="Adding changelog config" />
    <option name="LAST_COMMIT_MESSAGE" value="Adding changelog config" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <default-breakpoints>
        <breakpoint type="DlvErrorBreakpoint" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/frisbee$gobench_frisbee.out" NAME="gobench frisbee Coverage Results" MODIFIED="1616478760048" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>